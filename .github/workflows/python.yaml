name: Django application

on:
  push:
    paths:
    - 'backend-project/**'
    - '.github/**'
    - '**/docker-compose.yml'
  pull_request:
    paths:
    - 'backend-project/**'
    - '.github/**'
    - '**/docker-compose.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Pyupgrade
      run: make pyupgrade
    - name: Lint
      run: make lint
    - name: Build
      run: make build
    - name: Migration check
      run: make check
    - name: Show settings
      run: make settings
    - name: Diff OpenAPI
      run: make diff_openapi
    - name: Test
      run: ./backend-project/contrib/github/script.sh
    - name: Send coverage report
      run: make coverage_send_backend
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      if: github.event_name == 'push'
    - uses: actions/upload-artifact@v1
      with:
        name: openapi.yaml
        path: ./openapi.yaml
    - uses: actions/upload-artifact@v1
      # see https://github.com/actions/upload-artifact/issues/11 
      # for remove duplicated actions
      with:
        name: openapi.json
        path: ./openapi.json
    - name: Docker-compose logs
      run: docker-compose logs
      if: failure()
  push:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    needs:
      - test
    steps:
    - uses: actions/checkout@v1
    - name: Build production image
      run: docker build --target prod -t docker-registry.siecobywatelska.pl/small_eod/backend:latest backend-project/
    - name: "Docker login"
      env:
        DOCKER_REGISTRY_URL: docker-registry.siecobywatelska.pl
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: echo "${DOCKER_PASSWORD}" | docker login -u ${DOCKER_USERNAME} --password-stdin ${DOCKER_REGISTRY_URL}
    - name: Push image
      run: docker push docker-registry.siecobywatelska.pl/small_eod/backend:latest
    - name: Trigger SDK regenerate
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.SDK_REPO_TOKEN }}
        event-type: pushed
        repository: watchdogpolska/small-eod-sdk-javascript
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    needs:
      - test
    steps:
    - uses: actions/checkout@v1
    - name: Setup H1-CLI
      uses: ./.github/actions/h1-cli
    - uses: webfactory/ssh-agent@v0.3.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    - name: Inject website ssh-hostkey
      run: cat .github/h1-known-hosts > ~/.ssh/known_hosts;
    - name: Deploy update
      run: make deploy_backend
      env:
        HYPERONE_ACCESS_TOKEN_SECRET: ${{ secrets.HYPERONE_TOKEN }}
        HYPERONE_EARLY_ADOPTERS: 'true'
        HYPERONE_PROJECT: '587707232a57b6fd80f04bc1'
