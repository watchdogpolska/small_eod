# Generated by Django 3.0.7 on 2020-06-18 23:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('cases', '0001_initial'), ('cases', '0002_case_auditedinstitution'), ('cases', '0003_auto_20200109_1348'), ('cases', '0004_auto_20200114_0211'), ('cases', '0005_auto_20200122_2041'), ('cases', '0006_auto_20200126_0711')]

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tags', '0001_initial'),
        ('tags', '0003_tagnamespace_prefix'),
        ('institutions', '0001_initial'),
        ('institutions', '0004_auto_20200112_2019'),
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(help_text="Case's name.", max_length=256, verbose_name='Name')),
                ('comment', models.CharField(help_text='Comment for this case.', max_length=256, verbose_name='Comment')),
                ('audited_institution', models.ManyToManyField(blank=True, help_text='Case audits this Institution.', to='institutions.Institution', verbose_name='Audited institution')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='case_created_by', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='case_modified_by', to=settings.AUTH_USER_MODEL)),
                ('notified_user', models.ManyToManyField(blank=True, help_text='User who will receive notification.', related_name='case_notified_user', to=settings.AUTH_USER_MODEL, verbose_name='Notified user')),
                ('responsible_user', models.ManyToManyField(blank=True, help_text='User who is responsible for this case.', related_name='case_responsible_user', to=settings.AUTH_USER_MODEL, verbose_name='Responsible user')),
                ('tag', models.ManyToManyField(blank=True, help_text='Choose tag.', to='tags.Tag', verbose_name='Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
