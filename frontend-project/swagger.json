{
  "swagger": "2.0",
  "info": {
    "title": "Small_EOD",
    "contact": { "name": "Adam Dobrawy", "email": "adam.dobrawy@siecobywatelska.pl" },
    "license": { "name": "MIT" },
    "version": "v1"
  },
  "host": "localhost:8000",
  "schemes": ["http"],
  "basePath": "/api",
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "securityDefinitions": {
    "Basic": { "type": "basic" },
    "Bearer": { "type": "apiKey", "name": "Authorization", "in": "header" },
    "CollectionToken": { "type": "apiKey", "name": "authorization", "in": "query" }
  },
  "security": [{ "Basic": [] }, { "Bearer": [] }],
  "paths": {
    "/administrative_units/": {
      "get": {
        "operationId": "administrative_units_list",
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": { "type": "integer" },
                "next": { "type": "string", "format": "uri", "x-nullable": true },
                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                "results": {
                  "type": "array",
                  "items": { "$ref": "#/definitions/AdministrativeUnit" }
                }
              }
            }
          }
        },
        "tags": ["administrative_units"]
      },
      "parameters": []
    },
    "/administrative_units/{id}/": {
      "get": {
        "operationId": "administrative_units_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": { "description": "", "schema": { "$ref": "#/definitions/AdministrativeUnit" } }
        },
        "tags": ["administrative_units"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique value identifying this administrative unit.",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/cases/": {
      "get": {
        "operationId": "cases_list",
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": { "type": "integer" },
                "next": { "type": "string", "format": "uri", "x-nullable": true },
                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                "results": { "type": "array", "items": { "$ref": "#/definitions/CaseCount" } }
              }
            }
          }
        },
        "tags": ["cases"]
      },
      "post": {
        "operationId": "cases_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CaseCount" }
          }
        ],
        "responses": {
          "201": { "description": "", "schema": { "$ref": "#/definitions/CaseCount" } }
        },
        "tags": ["cases"]
      },
      "parameters": []
    },
    "/cases/{case_pk}/notifiedUsers/": {
      "get": {
        "operationId": "cases_notifiedUsers_list",
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": { "type": "integer" },
                "next": { "type": "string", "format": "uri", "x-nullable": true },
                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                "results": { "type": "array", "items": { "$ref": "#/definitions/User" } }
              }
            }
          }
        },
        "tags": ["cases"]
      },
      "parameters": [{ "name": "case_pk", "in": "path", "required": true, "type": "string" }]
    },
    "/cases/{case_pk}/notifiedUsers/{id}/": {
      "get": {
        "operationId": "cases_notifiedUsers_read",
        "description": "",
        "parameters": [],
        "responses": { "200": { "description": "", "schema": { "$ref": "#/definitions/User" } } },
        "tags": ["cases"]
      },
      "parameters": [
        { "name": "case_pk", "in": "path", "required": true, "type": "string" },
        { "name": "id", "in": "path", "required": true, "type": "string" }
      ]
    },
    "/cases/{case_pk}/responsibleUsers/": {
      "get": {
        "operationId": "cases_responsibleUsers_list",
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": { "type": "integer" },
                "next": { "type": "string", "format": "uri", "x-nullable": true },
                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                "results": { "type": "array", "items": { "$ref": "#/definitions/User" } }
              }
            }
          }
        },
        "tags": ["cases"]
      },
      "parameters": [{ "name": "case_pk", "in": "path", "required": true, "type": "string" }]
    },
    "/cases/{case_pk}/responsibleUsers/{id}/": {
      "get": {
        "operationId": "cases_responsibleUsers_read",
        "description": "",
        "parameters": [],
        "responses": { "200": { "description": "", "schema": { "$ref": "#/definitions/User" } } },
        "tags": ["cases"]
      },
      "parameters": [
        { "name": "case_pk", "in": "path", "required": true, "type": "string" },
        { "name": "id", "in": "path", "required": true, "type": "string" }
      ]
    },
    "/cases/{id}/": {
      "get": {
        "operationId": "cases_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": { "description": "", "schema": { "$ref": "#/definitions/CaseCount" } }
        },
        "tags": ["cases"]
      },
      "put": {
        "operationId": "cases_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CaseCount" }
          }
        ],
        "responses": {
          "200": { "description": "", "schema": { "$ref": "#/definitions/CaseCount" } }
        },
        "tags": ["cases"]
      },
      "patch": {
        "operationId": "cases_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CaseCount" }
          }
        ],
        "responses": {
          "200": { "description": "", "schema": { "$ref": "#/definitions/CaseCount" } }
        },
        "tags": ["cases"]
      },
      "delete": {
        "operationId": "cases_delete",
        "description": "",
        "parameters": [],
        "responses": { "204": { "description": "" } },
        "tags": ["cases"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this case.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/channels/": {
      "get": {
        "operationId": "channels_list",
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": { "type": "integer" },
                "next": { "type": "string", "format": "uri", "x-nullable": true },
                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                "results": { "type": "array", "items": { "$ref": "#/definitions/Channel" } }
              }
            }
          }
        },
        "tags": ["channels"]
      },
      "post": {
        "operationId": "channels_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Channel" }
          }
        ],
        "responses": {
          "201": { "description": "", "schema": { "$ref": "#/definitions/Channel" } }
        },
        "tags": ["channels"]
      },
      "parameters": []
    },
    "/channels/{id}/": {
      "get": {
        "operationId": "channels_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": { "description": "", "schema": { "$ref": "#/definitions/Channel" } }
        },
        "tags": ["channels"]
      },
      "put": {
        "operationId": "channels_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Channel" }
          }
        ],
        "responses": {
          "200": { "description": "", "schema": { "$ref": "#/definitions/Channel" } }
        },
        "tags": ["channels"]
      },
      "patch": {
        "operationId": "channels_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Channel" }
          }
        ],
        "responses": {
          "200": { "description": "", "schema": { "$ref": "#/definitions/Channel" } }
        },
        "tags": ["channels"]
      },
      "delete": {
        "operationId": "channels_delete",
        "description": "",
        "parameters": [],
        "responses": { "204": { "description": "" } },
        "tags": ["channels"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this channel.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/collections/": {
      "get": {
        "operationId": "collections_list",
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": { "type": "integer" },
                "next": { "type": "string", "format": "uri", "x-nullable": true },
                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                "results": { "type": "array", "items": { "$ref": "#/definitions/Collection" } }
              }
            }
          }
        },
        "tags": ["collections"]
      },
      "post": {
        "operationId": "collections_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Collection" }
          }
        ],
        "responses": {
          "201": { "description": "", "schema": { "$ref": "#/definitions/Collection" } }
        },
        "tags": ["collections"]
      },
      "parameters": []
    },
    "/collections/{collection_pk}/cases/": {
      "get": {
        "operationId": "collections_cases_list",
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": { "type": "integer" },
                "next": { "type": "string", "format": "uri", "x-nullable": true },
                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                "results": { "type": "array", "items": { "$ref": "#/definitions/Case" } }
              }
            }
          }
        },
        "tags": ["collections"],
        "security": [{ "Basic": [] }, { "Bearer": [] }, { "CollectionToken": [] }]
      },
      "parameters": [{ "name": "collection_pk", "in": "path", "required": true, "type": "string" }]
    },
    "/collections/{collection_pk}/cases/{case_pk}/events/": {
      "get": {
        "operationId": "collections_cases_events_list",
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": { "type": "integer" },
                "next": { "type": "string", "format": "uri", "x-nullable": true },
                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                "results": { "type": "array", "items": { "$ref": "#/definitions/Event" } }
              }
            }
          }
        },
        "tags": ["collections"],
        "security": [{ "Basic": [] }, { "Bearer": [] }, { "CollectionToken": [] }]
      },
      "parameters": [
        { "name": "case_pk", "in": "path", "required": true, "type": "string" },
        { "name": "collection_pk", "in": "path", "required": true, "type": "string" }
      ]
    },
    "/collections/{collection_pk}/cases/{case_pk}/events/{id}/": {
      "get": {
        "operationId": "collections_cases_events_read",
        "description": "",
        "parameters": [],
        "responses": { "200": { "description": "", "schema": { "$ref": "#/definitions/Event" } } },
        "tags": ["collections"],
        "security": [{ "Basic": [] }, { "Bearer": [] }, { "CollectionToken": [] }]
      },
      "parameters": [
        { "name": "case_pk", "in": "path", "required": true, "type": "string" },
        { "name": "collection_pk", "in": "path", "required": true, "type": "string" },
        { "name": "id", "in": "path", "required": true, "type": "string" }
      ]
    },
    "/collections/{collection_pk}/cases/{case_pk}/letters/": {
      "get": {
        "operationId": "collections_cases_letters_list",
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": { "type": "integer" },
                "next": { "type": "string", "format": "uri", "x-nullable": true },
                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                "results": { "type": "array", "items": { "$ref": "#/definitions/Letter" } }
              }
            }
          }
        },
        "tags": ["collections"],
        "security": [{ "Basic": [] }, { "Bearer": [] }, { "CollectionToken": [] }]
      },
      "parameters": [
        { "name": "case_pk", "in": "path", "required": true, "type": "string" },
        { "name": "collection_pk", "in": "path", "required": true, "type": "string" }
      ]
    },
    "/collections/{collection_pk}/cases/{case_pk}/letters/{id}/": {
      "get": {
        "operationId": "collections_cases_letters_read",
        "description": "",
        "parameters": [],
        "responses": { "200": { "description": "", "schema": { "$ref": "#/definitions/Letter" } } },
        "tags": ["collections"],
        "security": [{ "Basic": [] }, { "Bearer": [] }, { "CollectionToken": [] }]
      },
      "parameters": [
        { "name": "case_pk", "in": "path", "required": true, "type": "string" },
        { "name": "collection_pk", "in": "path", "required": true, "type": "string" },
        { "name": "id", "in": "path", "required": true, "type": "string" }
      ]
    },
    "/collections/{collection_pk}/cases/{case_pk}/notes/": {
      "get": {
        "operationId": "collections_cases_notes_list",
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": { "type": "integer" },
                "next": { "type": "string", "format": "uri", "x-nullable": true },
                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                "results": { "type": "array", "items": { "$ref": "#/definitions/Note" } }
              }
            }
          }
        },
        "tags": ["collections"],
        "security": [{ "Basic": [] }, { "Bearer": [] }, { "CollectionToken": [] }]
      },
      "parameters": [
        { "name": "case_pk", "in": "path", "required": true, "type": "string" },
        { "name": "collection_pk", "in": "path", "required": true, "type": "string" }
      ]
    },
    "/collections/{collection_pk}/cases/{case_pk}/notes/{id}/": {
      "get": {
        "operationId": "collections_cases_notes_read",
        "description": "",
        "parameters": [],
        "responses": { "200": { "description": "", "schema": { "$ref": "#/definitions/Note" } } },
        "tags": ["collections"],
        "security": [{ "Basic": [] }, { "Bearer": [] }, { "CollectionToken": [] }]
      },
      "parameters": [
        { "name": "case_pk", "in": "path", "required": true, "type": "string" },
        { "name": "collection_pk", "in": "path", "required": true, "type": "string" },
        { "name": "id", "in": "path", "required": true, "type": "string" }
      ]
    },
    "/collections/{collection_pk}/cases/{id}/": {
      "get": {
        "operationId": "collections_cases_read",
        "description": "",
        "parameters": [],
        "responses": { "200": { "description": "", "schema": { "$ref": "#/definitions/Case" } } },
        "tags": ["collections"],
        "security": [{ "Basic": [] }, { "Bearer": [] }, { "CollectionToken": [] }]
      },
      "parameters": [
        { "name": "collection_pk", "in": "path", "required": true, "type": "string" },
        { "name": "id", "in": "path", "required": true, "type": "string" }
      ]
    },
    "/collections/{collection_pk}/tokens/": {
      "post": {
        "operationId": "collections_tokens_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/TokenSet" }
          }
        ],
        "responses": {
          "201": { "description": "", "schema": { "$ref": "#/definitions/TokenSet" } }
        },
        "tags": ["collections"]
      },
      "parameters": [{ "name": "collection_pk", "in": "path", "required": true, "type": "string" }]
    },
    "/collections/{id}/": {
      "get": {
        "operationId": "collections_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": { "description": "", "schema": { "$ref": "#/definitions/Collection" } }
        },
        "tags": ["collections"],
        "security": [{ "Basic": [] }, { "Bearer": [] }, { "CollectionToken": [] }]
      },
      "put": {
        "operationId": "collections_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Collection" }
          }
        ],
        "responses": {
          "200": { "description": "", "schema": { "$ref": "#/definitions/Collection" } }
        },
        "tags": ["collections"]
      },
      "patch": {
        "operationId": "collections_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Collection" }
          }
        ],
        "responses": {
          "200": { "description": "", "schema": { "$ref": "#/definitions/Collection" } }
        },
        "tags": ["collections"]
      },
      "delete": {
        "operationId": "collections_delete",
        "description": "",
        "parameters": [],
        "responses": { "204": { "description": "" } },
        "tags": ["collections"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this collection.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/documentTypes/": {
      "get": {
        "operationId": "documentTypes_list",
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": { "type": "integer" },
                "next": { "type": "string", "format": "uri", "x-nullable": true },
                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                "results": { "type": "array", "items": { "$ref": "#/definitions/DocumentType" } }
              }
            }
          }
        },
        "tags": ["documentTypes"]
      },
      "post": {
        "operationId": "documentTypes_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DocumentType" }
          }
        ],
        "responses": {
          "201": { "description": "", "schema": { "$ref": "#/definitions/DocumentType" } }
        },
        "tags": ["documentTypes"]
      },
      "parameters": []
    },
    "/documentTypes/{id}/": {
      "get": {
        "operationId": "documentTypes_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": { "description": "", "schema": { "$ref": "#/definitions/DocumentType" } }
        },
        "tags": ["documentTypes"]
      },
      "put": {
        "operationId": "documentTypes_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DocumentType" }
          }
        ],
        "responses": {
          "200": { "description": "", "schema": { "$ref": "#/definitions/DocumentType" } }
        },
        "tags": ["documentTypes"]
      },
      "patch": {
        "operationId": "documentTypes_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DocumentType" }
          }
        ],
        "responses": {
          "200": { "description": "", "schema": { "$ref": "#/definitions/DocumentType" } }
        },
        "tags": ["documentTypes"]
      },
      "delete": {
        "operationId": "documentTypes_delete",
        "description": "",
        "parameters": [],
        "responses": { "204": { "description": "" } },
        "tags": ["documentTypes"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this document type.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/events/": {
      "get": {
        "operationId": "events_list",
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": { "type": "integer" },
                "next": { "type": "string", "format": "uri", "x-nullable": true },
                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                "results": { "type": "array", "items": { "$ref": "#/definitions/Event" } }
              }
            }
          }
        },
        "tags": ["events"]
      },
      "post": {
        "operationId": "events_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Event" }
          }
        ],
        "responses": { "201": { "description": "", "schema": { "$ref": "#/definitions/Event" } } },
        "tags": ["events"]
      },
      "parameters": []
    },
    "/events/{id}/": {
      "get": {
        "operationId": "events_read",
        "description": "",
        "parameters": [],
        "responses": { "200": { "description": "", "schema": { "$ref": "#/definitions/Event" } } },
        "tags": ["events"]
      },
      "put": {
        "operationId": "events_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Event" }
          }
        ],
        "responses": { "200": { "description": "", "schema": { "$ref": "#/definitions/Event" } } },
        "tags": ["events"]
      },
      "patch": {
        "operationId": "events_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Event" }
          }
        ],
        "responses": { "200": { "description": "", "schema": { "$ref": "#/definitions/Event" } } },
        "tags": ["events"]
      },
      "delete": {
        "operationId": "events_delete",
        "description": "",
        "parameters": [],
        "responses": { "204": { "description": "" } },
        "tags": ["events"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this event.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/features/": {
      "get": {
        "operationId": "features_list",
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": { "type": "integer" },
                "next": { "type": "string", "format": "uri", "x-nullable": true },
                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                "results": { "type": "array", "items": { "$ref": "#/definitions/Feature" } }
              }
            }
          }
        },
        "tags": ["features"]
      },
      "post": {
        "operationId": "features_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Feature" }
          }
        ],
        "responses": {
          "201": { "description": "", "schema": { "$ref": "#/definitions/Feature" } }
        },
        "tags": ["features"]
      },
      "parameters": []
    },
    "/features/{feature_pk}/featureoption/": {
      "get": {
        "operationId": "features_featureoption_list",
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": { "type": "integer" },
                "next": { "type": "string", "format": "uri", "x-nullable": true },
                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                "results": { "type": "array", "items": { "$ref": "#/definitions/FeatureOption" } }
              }
            }
          }
        },
        "tags": ["features"]
      },
      "post": {
        "operationId": "features_featureoption_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/FeatureOption" }
          }
        ],
        "responses": {
          "201": { "description": "", "schema": { "$ref": "#/definitions/FeatureOption" } }
        },
        "tags": ["features"]
      },
      "parameters": [{ "name": "feature_pk", "in": "path", "required": true, "type": "string" }]
    },
    "/features/{feature_pk}/featureoption/{id}/": {
      "get": {
        "operationId": "features_featureoption_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": { "description": "", "schema": { "$ref": "#/definitions/FeatureOption" } }
        },
        "tags": ["features"]
      },
      "put": {
        "operationId": "features_featureoption_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/FeatureOption" }
          }
        ],
        "responses": {
          "200": { "description": "", "schema": { "$ref": "#/definitions/FeatureOption" } }
        },
        "tags": ["features"]
      },
      "patch": {
        "operationId": "features_featureoption_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/FeatureOption" }
          }
        ],
        "responses": {
          "200": { "description": "", "schema": { "$ref": "#/definitions/FeatureOption" } }
        },
        "tags": ["features"]
      },
      "delete": {
        "operationId": "features_featureoption_delete",
        "description": "",
        "parameters": [],
        "responses": { "204": { "description": "" } },
        "tags": ["features"]
      },
      "parameters": [
        { "name": "feature_pk", "in": "path", "required": true, "type": "string" },
        { "name": "id", "in": "path", "required": true, "type": "string" }
      ]
    },
    "/features/{id}/": {
      "get": {
        "operationId": "features_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": { "description": "", "schema": { "$ref": "#/definitions/Feature" } }
        },
        "tags": ["features"]
      },
      "put": {
        "operationId": "features_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Feature" }
          }
        ],
        "responses": {
          "200": { "description": "", "schema": { "$ref": "#/definitions/Feature" } }
        },
        "tags": ["features"]
      },
      "patch": {
        "operationId": "features_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Feature" }
          }
        ],
        "responses": {
          "200": { "description": "", "schema": { "$ref": "#/definitions/Feature" } }
        },
        "tags": ["features"]
      },
      "delete": {
        "operationId": "features_delete",
        "description": "",
        "parameters": [],
        "responses": { "204": { "description": "" } },
        "tags": ["features"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this feature.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/institutions/": {
      "get": {
        "operationId": "institutions_list",
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Query filter. Currently filtering by name.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": { "type": "integer" },
                "next": { "type": "string", "format": "uri", "x-nullable": true },
                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                "results": { "type": "array", "items": { "$ref": "#/definitions/Institution" } }
              }
            }
          }
        },
        "tags": ["institutions"]
      },
      "post": {
        "operationId": "institutions_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Institution" }
          }
        ],
        "responses": {
          "201": { "description": "", "schema": { "$ref": "#/definitions/Institution" } }
        },
        "tags": ["institutions"]
      },
      "parameters": []
    },
    "/institutions/{id}/": {
      "get": {
        "operationId": "institutions_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": { "description": "", "schema": { "$ref": "#/definitions/Institution" } }
        },
        "tags": ["institutions"]
      },
      "put": {
        "operationId": "institutions_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Institution" }
          }
        ],
        "responses": {
          "200": { "description": "", "schema": { "$ref": "#/definitions/Institution" } }
        },
        "tags": ["institutions"]
      },
      "patch": {
        "operationId": "institutions_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Institution" }
          }
        ],
        "responses": {
          "200": { "description": "", "schema": { "$ref": "#/definitions/Institution" } }
        },
        "tags": ["institutions"]
      },
      "delete": {
        "operationId": "institutions_delete",
        "description": "",
        "parameters": [],
        "responses": { "204": { "description": "" } },
        "tags": ["institutions"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this institution.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/letters/": {
      "get": {
        "operationId": "letters_list",
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": { "type": "integer" },
                "next": { "type": "string", "format": "uri", "x-nullable": true },
                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                "results": { "type": "array", "items": { "$ref": "#/definitions/Letter" } }
              }
            }
          }
        },
        "tags": ["letters"]
      },
      "post": {
        "operationId": "letters_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Letter" }
          }
        ],
        "responses": { "201": { "description": "", "schema": { "$ref": "#/definitions/Letter" } } },
        "tags": ["letters"]
      },
      "parameters": []
    },
    "/letters/files/sign": {
      "post": {
        "operationId": "letters_files_sign_create",
        "description": "Generates pre-signed form data for uploading files to object storage.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SignRequest" }
          }
        ],
        "responses": {
          "201": { "description": "", "schema": { "$ref": "#/definitions/SignRequest" } }
        },
        "tags": ["letters"]
      },
      "parameters": []
    },
    "/letters/{id}/": {
      "get": {
        "operationId": "letters_read",
        "description": "",
        "parameters": [],
        "responses": { "200": { "description": "", "schema": { "$ref": "#/definitions/Letter" } } },
        "tags": ["letters"]
      },
      "put": {
        "operationId": "letters_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Letter" }
          }
        ],
        "responses": { "200": { "description": "", "schema": { "$ref": "#/definitions/Letter" } } },
        "tags": ["letters"]
      },
      "patch": {
        "operationId": "letters_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Letter" }
          }
        ],
        "responses": { "200": { "description": "", "schema": { "$ref": "#/definitions/Letter" } } },
        "tags": ["letters"]
      },
      "delete": {
        "operationId": "letters_delete",
        "description": "",
        "parameters": [],
        "responses": { "204": { "description": "" } },
        "tags": ["letters"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this letter.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/letters/{letter_pk}/files/": {
      "get": {
        "operationId": "letters_files_list",
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": { "type": "integer" },
                "next": { "type": "string", "format": "uri", "x-nullable": true },
                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                "results": { "type": "array", "items": { "$ref": "#/definitions/File" } }
              }
            }
          }
        },
        "tags": ["letters"]
      },
      "post": {
        "operationId": "letters_files_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/File" }
          }
        ],
        "responses": { "201": { "description": "", "schema": { "$ref": "#/definitions/File" } } },
        "tags": ["letters"]
      },
      "parameters": [{ "name": "letter_pk", "in": "path", "required": true, "type": "string" }]
    },
    "/letters/{letter_pk}/files/{id}/": {
      "get": {
        "operationId": "letters_files_read",
        "description": "",
        "parameters": [],
        "responses": { "200": { "description": "", "schema": { "$ref": "#/definitions/File" } } },
        "tags": ["letters"]
      },
      "put": {
        "operationId": "letters_files_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/File" }
          }
        ],
        "responses": { "200": { "description": "", "schema": { "$ref": "#/definitions/File" } } },
        "tags": ["letters"]
      },
      "patch": {
        "operationId": "letters_files_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/File" }
          }
        ],
        "responses": { "200": { "description": "", "schema": { "$ref": "#/definitions/File" } } },
        "tags": ["letters"]
      },
      "delete": {
        "operationId": "letters_files_delete",
        "description": "",
        "parameters": [],
        "responses": { "204": { "description": "" } },
        "tags": ["letters"]
      },
      "parameters": [
        { "name": "id", "in": "path", "required": true, "type": "string" },
        { "name": "letter_pk", "in": "path", "required": true, "type": "string" }
      ]
    },
    "/notes/": {
      "get": {
        "operationId": "notes_list",
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": { "type": "integer" },
                "next": { "type": "string", "format": "uri", "x-nullable": true },
                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                "results": { "type": "array", "items": { "$ref": "#/definitions/Note" } }
              }
            }
          }
        },
        "tags": ["notes"]
      },
      "post": {
        "operationId": "notes_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Note" }
          }
        ],
        "responses": { "201": { "description": "", "schema": { "$ref": "#/definitions/Note" } } },
        "tags": ["notes"]
      },
      "parameters": []
    },
    "/notes/{id}/": {
      "get": {
        "operationId": "notes_read",
        "description": "",
        "parameters": [],
        "responses": { "200": { "description": "", "schema": { "$ref": "#/definitions/Note" } } },
        "tags": ["notes"]
      },
      "put": {
        "operationId": "notes_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Note" }
          }
        ],
        "responses": { "200": { "description": "", "schema": { "$ref": "#/definitions/Note" } } },
        "tags": ["notes"]
      },
      "patch": {
        "operationId": "notes_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Note" }
          }
        ],
        "responses": { "200": { "description": "", "schema": { "$ref": "#/definitions/Note" } } },
        "tags": ["notes"]
      },
      "delete": {
        "operationId": "notes_delete",
        "description": "",
        "parameters": [],
        "responses": { "204": { "description": "" } },
        "tags": ["notes"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this note.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/tags/": {
      "get": {
        "operationId": "tags_list",
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": { "type": "integer" },
                "next": { "type": "string", "format": "uri", "x-nullable": true },
                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                "results": { "type": "array", "items": { "$ref": "#/definitions/Tag" } }
              }
            }
          }
        },
        "tags": ["tags"]
      },
      "post": {
        "operationId": "tags_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Tag" }
          }
        ],
        "responses": { "201": { "description": "", "schema": { "$ref": "#/definitions/Tag" } } },
        "tags": ["tags"]
      },
      "parameters": []
    },
    "/tags/{id}/": {
      "get": {
        "operationId": "tags_read",
        "description": "",
        "parameters": [],
        "responses": { "200": { "description": "", "schema": { "$ref": "#/definitions/Tag" } } },
        "tags": ["tags"]
      },
      "put": {
        "operationId": "tags_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Tag" }
          }
        ],
        "responses": { "200": { "description": "", "schema": { "$ref": "#/definitions/Tag" } } },
        "tags": ["tags"]
      },
      "patch": {
        "operationId": "tags_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Tag" }
          }
        ],
        "responses": { "200": { "description": "", "schema": { "$ref": "#/definitions/Tag" } } },
        "tags": ["tags"]
      },
      "delete": {
        "operationId": "tags_delete",
        "description": "",
        "parameters": [],
        "responses": { "204": { "description": "" } },
        "tags": ["tags"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this tag.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/users/": {
      "get": {
        "operationId": "users_list",
        "description": "API endpoint that allows users to be viewed or edited.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": { "type": "integer" },
                "next": { "type": "string", "format": "uri", "x-nullable": true },
                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                "results": { "type": "array", "items": { "$ref": "#/definitions/User" } }
              }
            }
          }
        },
        "tags": ["users"]
      },
      "post": {
        "operationId": "users_create",
        "description": "API endpoint that allows users to be viewed or edited.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/User" }
          }
        ],
        "responses": { "201": { "description": "", "schema": { "$ref": "#/definitions/User" } } },
        "tags": ["users"]
      },
      "parameters": []
    },
    "/users/auth/": {
      "get": {
        "operationId": "users_auth",
        "description": "API endpoint to receive URI for OAuth authorization url",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": { "description": "", "schema": { "$ref": "#/definitions/Request" } }
        },
        "tags": ["users"],
        "security": []
      },
      "parameters": []
    },
    "/users/exchange/": {
      "get": {
        "operationId": "users_exchange",
        "description": "API endpoint to exchange authorization code to access token",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": { "description": "", "schema": { "$ref": "#/definitions/TokenResponse" } }
        },
        "tags": ["users"],
        "security": []
      },
      "parameters": []
    },
    "/users/refresh/": {
      "post": {
        "operationId": "users_refresh",
        "description": "API endpoint to exchange refresh token to fresh access token",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/RefreshTokenRequest" }
          }
        ],
        "responses": {
          "200": { "description": "", "schema": { "$ref": "#/definitions/TokenResponse" } }
        },
        "tags": ["users"],
        "security": []
      },
      "parameters": []
    },
    "/users/{id}/": {
      "get": {
        "operationId": "users_read",
        "description": "API endpoint that allows users to be viewed or edited.",
        "parameters": [],
        "responses": { "200": { "description": "", "schema": { "$ref": "#/definitions/User" } } },
        "tags": ["users"]
      },
      "put": {
        "operationId": "users_update",
        "description": "API endpoint that allows users to be viewed or edited.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/User" }
          }
        ],
        "responses": { "200": { "description": "", "schema": { "$ref": "#/definitions/User" } } },
        "tags": ["users"]
      },
      "patch": {
        "operationId": "users_partial_update",
        "description": "API endpoint that allows users to be viewed or edited.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/User" }
          }
        ],
        "responses": { "200": { "description": "", "schema": { "$ref": "#/definitions/User" } } },
        "tags": ["users"]
      },
      "delete": {
        "operationId": "users_delete",
        "description": "API endpoint that allows users to be viewed or edited.",
        "parameters": [],
        "responses": { "204": { "description": "" } },
        "tags": ["users"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this user.",
          "required": true,
          "type": "integer"
        }
      ]
    }
  },
  "definitions": {
    "AdministrativeUnit": {
      "required": ["id", "name", "category", "updatedOn"],
      "type": "object",
      "properties": {
        "id": { "title": "Id", "type": "string", "maxLength": 7, "minLength": 1 },
        "parent": { "title": "Parent", "type": "string", "x-nullable": true },
        "name": { "title": "Name", "type": "string", "maxLength": 36, "minLength": 1 },
        "category": { "title": "Category", "type": "integer" },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "readOnly": true,
          "minLength": 1
        },
        "updatedOn": { "title": "Updated date", "type": "string", "format": "date" },
        "active": { "title": "Active", "type": "boolean" }
      }
    },
    "CaseCount": {
      "required": ["name"],
      "type": "object",
      "properties": {
        "id": { "title": "ID", "type": "integer", "readOnly": true },
        "comment": {
          "title": "Comment",
          "description": "Comment for this case.",
          "type": "string",
          "maxLength": 256
        },
        "auditedInstitutions": {
          "description": "Case audits this Institutions.",
          "type": "array",
          "items": { "description": "Case audits this Institutions.", "type": "integer" },
          "default": [],
          "uniqueItems": true
        },
        "name": {
          "title": "Name",
          "description": "Case's name.",
          "type": "string",
          "maxLength": 256,
          "minLength": 1
        },
        "responsibleUsers": {
          "type": "array",
          "items": { "type": "integer" },
          "default": [null],
          "uniqueItems": true
        },
        "notifiedUsers": {
          "type": "array",
          "items": { "type": "integer" },
          "default": [null],
          "uniqueItems": true
        },
        "featureoptions": {
          "type": "array",
          "items": { "type": "integer" },
          "default": [],
          "uniqueItems": true
        },
        "tags": { "type": "array", "items": { "type": "string", "minLength": 1 }, "minItems": 0 },
        "createdBy": { "title": "Created by", "type": "integer", "readOnly": true },
        "modifiedBy": { "title": "Modified by", "type": "integer", "readOnly": true },
        "createdOn": {
          "title": "Date of creation",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modifiedOn": {
          "title": "Date of the modification",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "letterCount": { "title": "Letter count", "type": "integer", "readOnly": true },
        "noteCount": { "title": "Note count", "type": "integer", "readOnly": true },
        "eventCount": { "title": "Event count", "type": "integer", "readOnly": true }
      }
    },
    "User": {
      "required": ["password", "username"],
      "type": "object",
      "properties": {
        "password": { "title": "Password", "type": "string", "maxLength": 128, "minLength": 1 },
        "username": {
          "title": "Username",
          "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
          "type": "string",
          "pattern": "^[\\w.@+-]+$",
          "maxLength": 150,
          "minLength": 1
        },
        "email": {
          "title": "Email address",
          "type": "string",
          "format": "email",
          "maxLength": 254
        },
        "firstName": { "title": "First name", "type": "string", "maxLength": 30 },
        "lastName": { "title": "Last name", "type": "string", "maxLength": 150 },
        "id": { "title": "ID", "type": "integer", "readOnly": true }
      }
    },
    "Channel": {
      "required": ["name"],
      "type": "object",
      "properties": {
        "id": { "title": "ID", "type": "integer", "readOnly": true },
        "name": {
          "title": "Name",
          "description": "Channel's name.",
          "type": "string",
          "maxLength": 25,
          "minLength": 1
        },
        "city": {
          "title": "City",
          "description": "Name of city in institution address is mandatory for this channel.",
          "type": "boolean"
        },
        "voivodeship": {
          "title": "Voivodeship",
          "description": "Voivodeship in institution address is mandatory for this channel.",
          "type": "boolean"
        },
        "flatNo": {
          "title": "Flat number",
          "description": "Flat number in institution address is mandatory for this channel.",
          "type": "boolean"
        },
        "street": {
          "title": "Street",
          "description": "Name of street in institution address is mandatory for this channel.",
          "type": "boolean"
        },
        "postalCode": {
          "title": "Postal code",
          "description": "Postal code in institution address is mandatory for this channel.",
          "type": "boolean"
        },
        "houseNo": {
          "title": "House number",
          "description": "House number in institution address is mandatory for this channel.",
          "type": "boolean"
        },
        "email": {
          "title": "E-mail",
          "description": "Institution e-mail address is mandatory for this channel.",
          "type": "boolean"
        },
        "epuap": {
          "title": "EPUAP",
          "description": "Institution ePUAP address is mandatory for this channel.",
          "type": "boolean"
        }
      }
    },
    "Collection": {
      "required": ["name", "expiredOn", "query"],
      "type": "object",
      "properties": {
        "id": { "title": "ID", "type": "integer", "readOnly": true },
        "name": {
          "title": "Name",
          "description": "Collection's name.",
          "type": "string",
          "maxLength": 256,
          "minLength": 1
        },
        "comment": {
          "title": "Comment",
          "description": "Comment for collection.",
          "type": "string",
          "maxLength": 256
        },
        "public": { "title": "Public", "description": "Make public.", "type": "boolean" },
        "expiredOn": {
          "title": "An expiration date",
          "description": "An expiration date of collection.",
          "type": "string",
          "format": "date-time"
        },
        "query": {
          "title": "Query",
          "description": "Query for collection.",
          "type": "string",
          "maxLength": 256,
          "minLength": 1
        }
      }
    },
    "Case": {
      "required": ["name"],
      "type": "object",
      "properties": {
        "id": { "title": "ID", "type": "integer", "readOnly": true },
        "comment": {
          "title": "Comment",
          "description": "Comment for this case.",
          "type": "string",
          "maxLength": 256
        },
        "auditedInstitutions": {
          "description": "Case audits this Institutions.",
          "type": "array",
          "items": { "description": "Case audits this Institutions.", "type": "integer" },
          "default": [],
          "uniqueItems": true
        },
        "name": {
          "title": "Name",
          "description": "Case's name.",
          "type": "string",
          "maxLength": 256,
          "minLength": 1
        },
        "responsibleUsers": {
          "type": "array",
          "items": { "type": "integer" },
          "default": [null],
          "uniqueItems": true
        },
        "notifiedUsers": {
          "type": "array",
          "items": { "type": "integer" },
          "default": [null],
          "uniqueItems": true
        },
        "featureoptions": {
          "type": "array",
          "items": { "type": "integer" },
          "default": [],
          "uniqueItems": true
        },
        "tags": { "type": "array", "items": { "type": "string", "minLength": 1 }, "minItems": 0 },
        "createdBy": { "title": "Created by", "type": "integer", "readOnly": true },
        "modifiedBy": { "title": "Modified by", "type": "integer", "readOnly": true },
        "createdOn": {
          "title": "Date of creation",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modifiedOn": {
          "title": "Date of the modification",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "Event": {
      "required": ["case", "name", "date", "comment"],
      "type": "object",
      "properties": {
        "id": { "title": "ID", "type": "integer", "readOnly": true },
        "case": { "title": "Case", "description": "Case for this event.", "type": "integer" },
        "name": {
          "title": "Name",
          "description": "Name of event.",
          "type": "string",
          "maxLength": 256,
          "minLength": 1
        },
        "date": {
          "title": "Date",
          "description": "Date of event.",
          "type": "string",
          "format": "date-time"
        },
        "comment": {
          "title": "Comment",
          "description": "Comment text.",
          "type": "string",
          "maxLength": 256,
          "minLength": 1
        }
      }
    },
    "File": {
      "required": ["path", "name"],
      "type": "object",
      "properties": {
        "id": { "title": "ID", "type": "integer", "readOnly": true },
        "path": {
          "title": "Path",
          "description": "Path to file.",
          "type": "string",
          "maxLength": 200,
          "minLength": 1
        },
        "downloadUrl": { "title": "Download url", "type": "string", "readOnly": true },
        "name": {
          "title": "Name",
          "description": "Name of file.",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "letter": { "title": "Letter", "type": "integer", "readOnly": true }
      }
    },
    "Letter": {
      "type": "object",
      "properties": {
        "id": { "title": "ID", "type": "integer", "readOnly": true },
        "direction": {
          "title": "Direction",
          "description": "Direction for letter.",
          "type": "string",
          "enum": ["IN", "OUT"]
        },
        "channel": { "title": "Channel", "type": "integer" },
        "final": {
          "title": "Final version",
          "description": "Indicates whether the document has final content or is, for example, a draft",
          "type": "boolean"
        },
        "date": {
          "title": "Date",
          "description": "Date of sending or receiving.",
          "type": "string",
          "format": "date-time"
        },
        "referenceNumber": {
          "title": "Reference number",
          "description": "Reference number of letter.",
          "type": "string",
          "maxLength": 256
        },
        "institution": { "title": "Institution", "type": "integer" },
        "case": { "title": "Case", "type": "integer" },
        "attachments": {
          "type": "array",
          "items": { "$ref": "#/definitions/File" },
          "readOnly": true
        },
        "ordering": {
          "title": "Ordering",
          "description": "Order of letter.",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "comment": {
          "title": "Comment",
          "description": "Comment for letter.",
          "type": "string",
          "maxLength": 256
        },
        "excerpt": {
          "title": "Excerpt",
          "description": "Excerpt of letter.",
          "type": "string",
          "maxLength": 256
        },
        "documentType": { "title": "Document type", "type": "integer" },
        "createdOn": {
          "title": "Date of creation",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "createdBy": { "title": "Created by", "type": "integer", "readOnly": true },
        "modifiedOn": {
          "title": "Date of the modification",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modifiedBy": { "title": "Modified by", "type": "integer", "readOnly": true }
      }
    },
    "Note": {
      "required": ["case", "comment"],
      "type": "object",
      "properties": {
        "id": { "title": "ID", "type": "integer", "readOnly": true },
        "case": { "title": "Case", "description": "Related case.", "type": "integer" },
        "comment": { "title": "Comment", "type": "string", "maxLength": 256, "minLength": 1 }
      }
    },
    "TokenSet": {
      "type": "object",
      "properties": {
        "lifetime": { "title": "Lifetime", "type": "integer", "minimum": 60 },
        "accessToken": {
          "title": "Access token",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        }
      }
    },
    "DocumentType": {
      "required": ["name"],
      "type": "object",
      "properties": {
        "name": {
          "title": "Document type",
          "description": "Type of letter",
          "type": "string",
          "maxLength": 256,
          "minLength": 1
        }
      }
    },
    "NestedFeatureOption": {
      "required": ["name"],
      "type": "object",
      "properties": {
        "id": { "title": "ID", "type": "integer", "readOnly": true },
        "name": {
          "title": "Name",
          "description": "Name of option.",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        }
      }
    },
    "Feature": {
      "required": ["name"],
      "type": "object",
      "properties": {
        "id": { "title": "ID", "type": "integer", "readOnly": true },
        "name": {
          "title": "Name",
          "description": "Name of feature.",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "minOptions": {
          "title": "Min. options",
          "description": "Minimum number of selected option (if any).",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "maxOptions": {
          "title": "Max. options",
          "description": "Maximum number of selected option.",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "featureoptions": {
          "type": "array",
          "items": { "$ref": "#/definitions/NestedFeatureOption" },
          "default": []
        }
      }
    },
    "FeatureOption": {
      "required": ["name"],
      "type": "object",
      "properties": {
        "id": { "title": "ID", "type": "integer", "readOnly": true },
        "name": {
          "title": "Name",
          "description": "Name of option.",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "feature": { "title": "Feature", "type": "integer" }
      }
    },
    "Institution": {
      "required": ["name", "administrativeUnit"],
      "type": "object",
      "properties": {
        "id": { "title": "ID", "type": "integer", "readOnly": true },
        "modifiedBy": { "title": "Modified by", "type": "integer", "readOnly": true },
        "createdBy": { "title": "Created by", "type": "integer", "readOnly": true },
        "modifiedOn": {
          "title": "Date of the modification",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "createdOn": {
          "title": "Date of creation",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "description": "Name of institution",
          "type": "string",
          "maxLength": 256,
          "minLength": 1
        },
        "administrativeUnit": { "title": "Administrative unit", "type": "string" },
        "email": {
          "title": "E-mail",
          "description": "E-mail address.",
          "type": "string",
          "format": "email",
          "maxLength": 254
        },
        "city": {
          "title": "City",
          "description": "Name of city.",
          "type": "string",
          "maxLength": 100
        },
        "epuap": {
          "title": "EPUAP",
          "description": "ePUAP address.",
          "type": "string",
          "maxLength": 100
        },
        "street": {
          "title": "Street",
          "description": "Name of street.",
          "type": "string",
          "maxLength": 100
        },
        "houseNo": {
          "title": "House number",
          "description": "House number.",
          "type": "string",
          "maxLength": 100
        },
        "postalCode": {
          "title": "Postal code",
          "description": "Postal code.",
          "type": "string",
          "maxLength": 100
        },
        "flatNo": {
          "title": "Flat number",
          "description": "Flat number.",
          "type": "string",
          "maxLength": 100
        },
        "nip": {
          "title": "NIP",
          "description": "Tax Identification Number.",
          "type": "string",
          "pattern": "^[0-9]*$",
          "maxLength": 10
        },
        "regon": {
          "title": "REGON",
          "description": "Statistical Identification Number.",
          "type": "string",
          "pattern": "^[0-9]*$",
          "maxLength": 14
        },
        "comment": {
          "title": "Comment",
          "description": "Comment for this case.",
          "type": "string",
          "maxLength": 256
        },
        "tags": { "type": "array", "items": { "type": "string", "minLength": 1 }, "minItems": 0 }
      }
    },
    "SignRequest": {
      "required": ["name"],
      "type": "object",
      "properties": {
        "name": { "title": "Name", "type": "string", "maxLength": 200, "minLength": 1 },
        "method": { "title": "Method", "type": "string", "readOnly": true, "minLength": 1 },
        "url": { "title": "Url", "type": "string", "readOnly": true, "minLength": 1 },
        "formData": {
          "title": "Formdata",
          "type": "object",
          "additionalProperties": { "type": "string", "minLength": 1 },
          "readOnly": true
        },
        "path": { "title": "Path", "type": "string", "readOnly": true, "minLength": 1 }
      }
    },
    "Tag": {
      "required": ["name"],
      "type": "object",
      "properties": {
        "name": { "title": "Tag", "type": "string", "maxLength": 256, "minLength": 1 },
        "id": { "title": "ID", "type": "integer", "readOnly": true }
      }
    },
    "Request": {
      "required": ["url"],
      "type": "object",
      "properties": { "url": { "title": "Url", "type": "string", "minLength": 1 } }
    },
    "TokenResponse": {
      "required": ["accessToken", "refreshToken"],
      "type": "object",
      "properties": {
        "accessToken": { "title": "Access token", "type": "string", "minLength": 1 },
        "expiresIn": { "title": "Expires in", "type": "integer", "default": 300 },
        "refreshToken": { "title": "Refresh token", "type": "string", "minLength": 1 }
      }
    },
    "RefreshTokenRequest": {
      "required": ["refreshToken"],
      "type": "object",
      "properties": {
        "refreshToken": { "title": "Refresh token", "type": "string", "minLength": 1 }
      }
    }
  }
}
